{
	"info": {
		"_postman_id": "generated-by-cline",
		"name": "Pizzeria API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Autenticación",
			"item": [
				{
					"name": "Obtener Token (DRF)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"your_username\",\n    \"password\": \"your_password\"\n}"
						},
						"url": {
							"raw": "{{host}}/api-token-auth/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api-token-auth",
								""
							]
						},
						"description": "Obtiene un token de autenticación para un usuario (Django REST Framework)."
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Parsear la respuesta JSON",
									"var jsonData = pm.response.json();",
									"",
									"// Verificar si la respuesta contiene un token",
									"if (jsonData.token) {",
									"    // Establecer la variable de colección 'your_auth_token' con el valor del token",
									"    pm.collectionVariables.set(\"your_auth_token\", jsonData.token);",
									"    console.log(\"DRF Token obtenido y guardado en la variable 'your_auth_token': \" + jsonData.token);",
									"} else {",
									"    console.log(\"No se encontró un token en la respuesta.\");",
									"}"
								]
							}
						}
					]
				},
				{
					"name": "Obtener Tokens (JWT)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"your_username\",\n    \"password\": \"your_password\"\n}"
						},
						"url": {
							"raw": "{{host}}/auth/token/",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"token",
								""
							]
						},
						"description": "Obtiene un par de tokens (acceso y refresco) para un usuario (Simple JWT)."
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Parsear la respuesta JSON",
									"var jsonData = pm.response.json();",
									"",
									"// Verificar si la respuesta contiene tokens",
									"if (jsonData.access && jsonData.refresh) {",
									"    // Establecer las variables de colección con los valores de los tokens",
									"    pm.collectionVariables.set(\"your_access_token\", jsonData.access);",
									"    pm.collectionVariables.set(\"your_refresh_token\", jsonData.refresh);",
									"    console.log(\"JWT Access Token obtenido y guardado: \" + jsonData.access);",
									"    console.log(\"JWT Refresh Token obtenido y guardado: \" + jsonData.refresh);",
									"} else {",
									"    console.log(\"No se encontraron tokens JWT en la respuesta.\");",
									"}"
								]
							}
						}
					]
				},
				{
					"name": "Refrescar Token (JWT)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"your_refresh_token\"\n}"
						},
						"url": {
							"raw": "{{host}}/auth/token/refresh/",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"token",
								"refresh",
								""
							]
						},
						"description": "Obtiene un nuevo token de acceso utilizando un token de refresco válido (Simple JWT)."
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Parsear la respuesta JSON",
									"var jsonData = pm.response.json();",
									"",
									"// Verificar si la respuesta contiene un token de acceso",
									"if (jsonData.access) {",
									"    // Establecer la variable de colección 'your_access_token' con el nuevo token de acceso",
									"    pm.collectionVariables.set(\"your_access_token\", jsonData.access);",
									"    console.log(\"Nuevo JWT Access Token obtenido y guardado: \" + jsonData.access);",
									"} else {",
									"    console.log(\"No se encontró un nuevo token de acceso en la respuesta.\");",
									"}"
								]
							}
						}
					]
				},
				{
					"name": "Verificar Token (JWT)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"your_access_token\"\n}"
						},
						"url": {
							"raw": "{{host}}/auth/token/verify/",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"token",
								"verify",
								""
							]
						},
						"description": "Verifica la validez de un token de acceso (Simple JWT)."
					},
					"response": []
				}
			]
		},
		{
			"name": "Pizzería",
			"item": [
				{
					"name": "Listar Pizzas",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{your_auth_token}}",
								"description": "Usar 'Token your_auth_token' para DRF Token o 'Bearer your_access_token' para JWT",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/pizzas/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"pizzas",
								""
							]
						},
						"description": "Obtiene la lista de todas las pizzas."
					},
					"response": []
				},
				{
					"name": "Crear Pizza",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token {{your_auth_token}}",
								"description": "Usar 'Token your_auth_token' para DRF Token o 'Bearer your_access_token' para JWT",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Nueva Pizza\",\n    \"description\": \"Descripción de la nueva pizza\",\n    \"price\": 10.00\n}"
						},
						"url": {
							"raw": "{{host}}/api/pizzas/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"pizzas",
								""
							]
						},
						"description": "Crea una nueva pizza."
					},
					"response": []
				},
				{
					"name": "Ver Detalle de Pizza",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{your_auth_token}}",
								"description": "Usar 'Token your_auth_token' para DRF Token o 'Bearer your_access_token' para JWT",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/pizzas/:pk/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"pizzas",
								":pk",
								""
							]
						},
						"description": "Obtiene los detalles de una pizza específica por su ID."
					},
					"response": []
				},
				{
					"name": "Actualizar Pizza (PATCH)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token {{your_auth_token}}",
								"description": "Usar 'Token your_auth_token' para DRF Token o 'Bearer your_access_token' para JWT",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 15.00\n}"
						},
						"url": {
							"raw": "{{host}}/api/pizzas/:pk/update/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"pizzas",
								":pk",
								"update",
								""
							]
						},
						"description": "Actualiza parcialmente una pizza por su ID."
					},
					"response": []
				},
				{
					"name": "Añadir Ingrediente a Pizza",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{your_auth_token}}",
								"description": "Usar 'Token your_auth_token' para DRF Token o 'Bearer your_access_token' para JWT",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/pizzas/:pk/add_ingredient/:ingredient_pk/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"pizzas",
								":pk",
								"add_ingredient",
								":ingredient_pk",
								""
							]
						},
						"description": "Añade un ingrediente a una pizza específica."
					},
					"response": []
				},
				{
					"name": "Eliminar Ingrediente de Pizza",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{your_auth_token}}",
								"description": "Usar 'Token your_auth_token' para DRF Token o 'Bearer your_access_token' para JWT",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/pizzas/:pk/remove_ingredient/:ingredient_pk/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"pizzas",
								":pk",
								"remove_ingredient",
								":ingredient_pk",
								""
							]
						},
						"description": "Elimina un ingrediente de una pizza específica."
					},
					"response": []
				},
				{
					"name": "Listar Ingredientes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{your_auth_token}}",
								"description": "Usar 'Token your_auth_token' para DRF Token o 'Bearer your_access_token' para JWT",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/ingredients/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients",
								""
							]
						},
						"description": "Obtiene la lista de todos los ingredientes."
					},
					"response": []
				},
				{
					"name": "Crear Ingrediente",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token {{your_auth_token}}",
								"description": "Usar 'Token your_auth_token' para DRF Token o 'Bearer your_access_token' para JWT",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Nuevo Ingrediente\"\n}"
						},
						"url": {
							"raw": "{{host}}/api/ingredients/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients",
								""
							]
						},
						"description": "Crea un nuevo ingrediente."
					},
					"response": []
				},
				{
					"name": "Ver Detalle de Ingrediente",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{your_auth_token}}",
								"description": "Usar 'Token your_auth_token' para DRF Token o 'Bearer your_access_token' para JWT",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/ingredients/:pk/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients",
								":pk",
								""
							]
						},
						"description": "Obtiene los detalles de un ingrediente específico por su ID."
					},
					"response": []
				},
				{
					"name": "Actualizar Ingrediente (PATCH)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token {{your_auth_token}}",
								"description": "Usar 'Token your_auth_token' para DRF Token o 'Bearer your_access_token' para JWT",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tomate Fresco\"\n}"
						},
						"url": {
							"raw": "{{host}}/api/ingredients/:pk/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients",
								":pk",
								""
							]
						},
						"description": "Actualiza parcialmente un ingrediente por su ID."
					},
					"response": []
				},
				{
					"name": "Eliminar Ingrediente",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{your_auth_token}}",
								"description": "Usar 'Token your_auth_token' para DRF Token o 'Bearer your_access_token' para JWT",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/ingredients/:pk/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients",
								":pk",
								""
							]
						},
						"description": "Elimina un ingrediente específico por su ID."
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://127.0.0.1:8000",
			"description": "La URL base de la API"
		},
		{
			"key": "your_username",
			"value": "admin",
			"description": "Tu nombre de usuario"
		},
		{
			"key": "your_password",
			"value": "password",
			"description": "Tu contraseña"
		},
		{
			"key": "your_auth_token",
			"value": "YOUR_DRF_TOKEN",
			"description": "Tu token de autenticación DRF"
		},
		{
			"key": "your_access_token",
			"value": "YOUR_JWT_ACCESS_TOKEN",
			"description": "Tu token de acceso JWT"
		},
		{
			"key": "your_refresh_token",
			"value": "YOUR_JWT_REFRESH_TOKEN",
			"description": "Tu token de refresco JWT"
		}
	]
}
